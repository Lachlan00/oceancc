df_month <- list()
for (d in df_ls){
df_year[[i]] <- aggregate(d, by=list(d$year), mean)
df_month[[i]] <- aggregate(d, by=list(dd$year, d$month), mean)
i <- i +1
}
df <- df_ls[[1]]
df
df_ls[[2]]
df_ls[[3]]
df_ls[[1]]
df
df <- df_ls[[1]]
aggregate(df, by=list(df$year), mean)
library(ggplot2)
library(lubridate)
# Setup
setwd("~/Development/PhD/repos/oceancc")
# get data
df_Jerv <- read.csv('./data/count_Jerv.csv')
df_Jerv$site <- 'Jerv'
df_Bate <- read.csv('./data/count_Bate.csv')
df_Bate$site <- 'Bate'
df_Howe <- read.csv('./data/count_Howe.csv')
df_Howe$site <- 'Howe'
# bind data
df <- do.call('rbind', list(df_Jerv, df_Bate, df_Howe))
# convert string to date
df$dt <- as.POSIXct(df$dt)
# convert string to factor
df$site <- as.factor(df$site)
# make Ratio data
df$ratioA = df$countA/(df$countA + df$countB)
df$ratioB = df$countB/(df$countA + df$countB)
# add year and month
df$year <- year(df$dt)
df$month <- month(df$dt)
# get monthly and yearly means
i <- 1
df_ls <- split(df, df$site)
df_year <- list()
df_month <- list()
for (df in df_ls){
df_year[[i]] <- aggregate(df, by=list(df$year), mean)
df_month[[i]] <- aggregate(df, by=list(df$year, df$month), mean)
i <- i +1df
}
# get monthly and yearly means
i <- 1
df_ls <- split(df, df$site)
df_year <- list()
df_month <- list()
for (df in df_ls){
df_year[[i]] <- aggregate(df, by=list(df$year), mean)
df_month[[i]] <- aggregate(df, by=list(df$year, df$month), mean)
i <- i +1
}
df <- do.call('rbind', df_year)
df <- do.call('rbind',df_month)
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
ggplot(df_month, aes(x=dt, y=ratioA, colour=site)) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Months')
ggplot(df_year, aes(x=dt, y=ratioA, colour=site)) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Years')
library(ggplot2)
library(lubridate)
# Setup
setwd("~/Development/PhD/repos/oceancc")
# get data
df_Jerv <- read.csv('./data/count_Jerv.csv')
df_Jerv$site <- 'Jerv'
df_Bate <- read.csv('./data/count_Bate.csv')
df_Bate$site <- 'Bate'
df_Howe <- read.csv('./data/count_Howe.csv')
df_Howe$site <- 'Howe'
# bind data
df <- do.call('rbind', list(df_Jerv, df_Bate, df_Howe))
# convert string to date
df$dt <- as.POSIXct(df$dt)
# convert string to factor
df$site <- as.factor(df$site)
# make Ratio data
df$ratioA = df$countA/(df$countA + df$countB)
df$ratioB = df$countB/(df$countA + df$countB)
# add year and month
df$year <- year(df$dt)
df$month <- month(df$dt)
# get monthly and yearly means
i <- 1
df_ls <- split(df, df$site)
df_year <- list()
df_month <- list()
for (df in df_ls){
df_year[[i]] <- aggregate(df, by=list(df$year), mean)
df_month[[i]] <- aggregate(df, by=list(df$year, df$month), mean)
i <- i +1
}
df_year <- do.call('rbind', df_year)
df_month <- do.call('rbind',df_month)
# plot
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
geom_point() +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
library(ggplot2)
library(lubridate)
# Setup
setwd("~/Development/PhD/repos/oceancc")
# get data
df_Jerv <- read.csv('./data/count_Jerv.csv')
df_Jerv$site <- 'Jerv'
df_Bate <- read.csv('./data/count_Bate.csv')
df_Bate$site <- 'Bate'
df_Howe <- read.csv('./data/count_Howe.csv')
df_Howe$site <- 'Howe'
# bind data
df <- do.call('rbind', list(df_Jerv, df_Bate, df_Howe))
# convert string to date
df$dt <- as.POSIXct(df$dt)
# convert string to factor
df$site <- as.factor(df$site)
# make Ratio data
df$ratioA = df$countA/(df$countA + df$countB)
df$ratioB = df$countB/(df$countA + df$countB)
# add year and month
df$year <- year(df$dt)
df$month <- month(df$dt)
# get monthly and yearly means
i <- 1
df_ls <- split(df, df$site)
df_year <- list()
df_month <- list()
for (dat in df_ls){
df_year[[i]] <- aggregate(dat, by=list(dat$year), mean)
df_month[[i]] <- aggregate(dat, by=list(dat$year, dat$month), mean)
i <- i +1
}
df_year <- do.call('rbind', df_year)
df_month <- do.call('rbind',df_month)
# plot
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
geom_point() +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
# plot
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.5) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
# plot
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.2) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
ggplot(df_month, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.2) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Months')
library(ggplot2)
library(lubridate)
# Setup
setwd("~/Development/PhD/repos/oceancc")
# get data
df_Jerv <- read.csv('./data/count_Jerv.csv')
df_Jerv$site <- 'Jerv'
df_Bate <- read.csv('./data/count_Bate.csv')
df_Bate$site <- 'Bate'
df_Howe <- read.csv('./data/count_Howe.csv')
df_Howe$site <- 'Howe'
# bind data
df <- do.call('rbind', list(df_Jerv, df_Bate, df_Howe))
# convert string to date
df$dt <- as.POSIXct(df$dt)
# convert string to factor
df$site <- as.factor(df$site)
# make Ratio data
df$ratioA = df$countA/(df$countA + df$countB)
df$ratioB = df$countB/(df$countA + df$countB)
# add year and month
df$year <- year(df$dt)
df$month <- month(df$dt)
# get monthly and yearly means
i <- 1
df_ls <- split(df, df$site)
df_year <- list()
df_month <- list()
for (dat in df_ls){
df_year[[i]] <- aggregate(dat, by=list(dat$year), mean)
df_month[[i]] <- aggregate(dat, by=list(dat$year, dat$month), mean)
df_year[[i]]$site <- dat$site[1]
df_month[[i]]$site <- dat$site[1]
i <- i +1
}
df_year <- do.call('rbind', df_year)
df_month <- do.call('rbind',df_month)
# plot
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.2) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
ggplot(df_month, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.2) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Months')
ggplot(df_year, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.2) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Years')
# make models
print('\nModel all days')
fit <- lm(formula = ratioA ~ dt*site, data = df)
anova(fit)
TukeyHSD(aov(fit))
print('\nModel all month means')
fit <- lm(formula = ratioA ~ dt*site, data = df_month)
anova(fit)
TukeyHSD(aov(fit))
print('\nModel all year means')
fit <- lm(formula = ratioA ~ dt*site, data = df_year)
anova(fit)
TukeyHSD(aov(fit))
df_year[df_year$year == 2016,]
df_year[~df_year$year == 2016,]
df_year[!df_year$year == 2016,]
# Basic statistical tests for paper
# have run the tests with data points being each day, the monthly means
# and the yearly means. The yearly means is the correct one to use in my
# case as it smooths out the seasonal component.
library(ggplot2)
library(lubridate)
# Setup
setwd("~/Development/PhD/repos/oceancc")
# get data
df_Jerv <- read.csv('./data/count_Jerv.csv')
df_Jerv$site <- 'Jerv'
df_Bate <-
read.csv('./data/count_Bate.csv')
df_Bate$site <- 'Bate'
df_Howe <- read.csv('./data/count_Howe.csv')
df_Howe$site <- 'Howe'
# bind data
df <- do.call('rbind', list(df_Jerv, df_Bate, df_Howe))
# convert string to date
df$dt <- as.POSIXct(df$dt)
# convert string to factor
df$site <- as.factor(df$site)
# make Ratio data
df$ratioA = df$countA/(df$countA + df$countB)
df$ratioB = df$countB/(df$countA + df$countB)
# add year and month
df$year <- year(df$dt)
df$month <- month(df$dt)
# get monthly and yearly means
i <- 1
df_ls <- split(df, df$site)
df_year <- list()
df_month <- list()
for (dat in df_ls){
df_year[[i]] <- aggregate(dat, by=list(dat$year), mean)
df_month[[i]] <- aggregate(dat, by=list(dat$year, dat$month), mean)
df_year[[i]]$site <- dat$site[1]
df_month[[i]]$site <- dat$site[1]
i <- i +1
}
df_year <- do.call('rbind', df_year)
df_month <- do.call('rbind',df_month)
# drop 2016 in years
df_year <- df_year[!df_year$year == 2016,]
# plot
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
ggplot(df_month, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Months')
ggplot(df_year, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Years')
# make models
print('\nModel all days')
fit <- lm(formula = ratioA ~ dt*site, data = df)
anova(fit)
TukeyHSD(aov(fit))
print('\nModel all month means')
fit <- lm(formula = ratioA ~ dt*site, data = df_month)
anova(fit)
TukeyHSD(aov(fit))
print('\nModel all year means')
fit <- lm(formula = ratioA ~ dt*site, data = df_year)
anova(fit)
TukeyHSD(aov(fit))
summary(fit)
# compare slopes
slopes <- fit$coefficients
m.lst <- lstrends(fit, "site", var="ratioA")
library(lsmeans)
install.packages("lsmeans")
library(lsmeans)
m.lst <- lstrends(fit, "site", var="ratioA")
fit
m.lst <- lstrends(fit, "site", var="dt")
m.lst <- lstrends(fit, "site")
ggplot(df_year, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "loess") +
stat_smooth(data=subset(df, site == "Bate"), method = "loess") +
stat_smooth(data=subset(df, site == "Howe"), method = "loess") +
ggtitle('Years')
ggplot(df_year, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Years')
m.lst <- lstrends(fit, ~ "site", var="ratioA")
m.lst <- lstrends(fit, "site", var="dt")
m.lst <- lstrends(fit, "dt", var="site")
m.lst <- lstrends(fit, "raitoA", var="dt")
fit <- lm(formula = ratioA ~ dt*site, data = df_year)
anova(fit)
TukeyHSD(aov(fit))
summary(fit)
# Basic statistical tests for paper
# have run the tests with data points being each day, the monthly means
# and the yearly means. The yearly means is the correct one to use in my
# case as it smooths out the seasonal component.
library(ggplot2)
library(lubridate)
library(lsmeans)
# Setup
setwd("~/Development/PhD/repos/oceancc")
# get data
df_Jerv <- read.csv('./data/count_Jerv.csv')
df_Jerv$site <- 'Jerv'
df_Bate <-
read.csv('./data/count_Bate.csv')
df_Bate$site <- 'Bate'
df_Howe <- read.csv('./data/count_Howe.csv')
df_Howe$site <- 'Howe'
# bind data
df <- do.call('rbind', list(df_Jerv, df_Bate, df_Howe))
# convert string to date
df$dt <- as.POSIXct(df$dt)
# convert string to factor
df$site <- as.factor(df$site)
# make Ratio data
df$ratioA = df$countA/(df$countA + df$countB)
df$ratioB = df$countB/(df$countA + df$countB)
# add year and month
df$year <- year(df$dt)
df$month <- month(df$dt)
# get monthly and yearly means
i <- 1
df_ls <- split(df, df$site)
df_year <- list()
df_month <- list()
for (dat in df_ls){
df_year[[i]] <- aggregate(dat, by=list(dat$year), mean)
df_month[[i]] <- aggregate(dat, by=list(dat$year, dat$month), mean)
df_year[[i]]$site <- dat$site[1]
df_month[[i]]$site <- dat$site[1]
i <- i +1
}
df_year <- do.call('rbind', df_year)
df_month <- do.call('rbind',df_month)
# drop 2016 in years
df_year <- df_year[!df_year$year == 2016,]
# plot
ggplot(df, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Days')
ggplot(df_month, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Months')
ggplot(df_year, aes(x=dt, y=ratioA, colour=site)) +
geom_point(alpha=0.4) +
stat_smooth(data=subset(df, site == "Jerv"), method = "lm") +
stat_smooth(data=subset(df, site == "Bate"), method = "lm") +
stat_smooth(data=subset(df, site == "Howe"), method = "lm") +
ggtitle('Years')
# make models
print('\nModel all days')
fit <- lm(formula = ratioA ~ dt*site, data = df)
anova(fit)
TukeyHSD(aov(fit))
print('\nModel all month means')
fit <- lm(formula = ratioA ~ dt*site, data = df_month)
anova(fit)
TukeyHSD(aov(fit))
print('\nModel all year means')
fit <- lm(formula = ratioA ~ dt*site, data = df_year)
anova(fit)
summary(fit)
TukeyHSD(aov(fit))
plot(fit)
#### Ian's glmmTB method
library(glmmTMB)
fit0 <- glmmTMB(ratioA ~ dt + (1 | site), data = df, family = 'beta_family')
library(glmmTMB)
fit0 <- glmmTMB(ratioA ~ dt + (1 | site), data = df_year, family = 'beta_family')
fit1 <- glmmTMB(ratioA ~ dt + (dt | site), data = df_year, family = 'beta_family')
fit0
fit0 <- glmmTMB(ratioA ~ (1 | site), data = df_year, family = 'beta_family')
fit1 <- glmmTMB(ratioA ~ (dt | site), data = df_year, family = 'beta_family')
summary(fit0)
summary(fit1)
plot(fit1)
anova(fit1)
fit <- glmmTMB(ratioA ~ 1 + (dt | site), data = df_year, family = 'beta_family')
summary(fit)
plot(df_year$dt)
plot(df_year$ratioA)
fit <- glmmTMB(ratioA ~ (dt | site), data = df_year, family = 'beta_family')
sumarry(fit)
summary(fit)
fit
fit <- glmmTMB(ratioA ~ 1 + (dt | site), data = df_year, family = 'beta_family')
summary(fit)
TukeyHSD(fit1)
resid(fit)
plot(resid(fit))
desnity(resid(fit))
hist(resid(fit))
hist(resid(fit), bin=10)
hist(resid(fit), bins=10)
?hist
hist(resid(fit), breaks=10)
hist(resid(fit), breaks=20)
hist(resid(fit), breaks=50)
plot(density(resid(fit)))
fit <- glmmTMB(ratioA ~ 1 + (dt | site), data = df_year, family = 'beta_family')
#### Ian's glmmTB method (beta regression model)
library(glmmTMB)
fit <- glmmTMB(ratioA ~ 1 + (dt | site), data = df_year, family = 'beta_family')
summary(fit)
# residual density
plot(density(resid(fit)))
head(df_year)
df_year['dt', 'site', 'ratopA']
df_year['dt', 'site', 'ratioA']
df_year[,c('dt', 'site', 'ratioA')]
head(df_year[,c('dt', 'site', 'ratioA')])
# make proper index
df_year$idx <- 1:length(df_year$dt)
#### Ian's glmmTB method (beta regression model)
library(glmmTMB)
fit <- glmmTMB(ratioA ~ 1 + (idx | site), data = df_year, family = 'beta_family')
summary(fit)
df_year$idx
df_year$idx <- NULL
test <- df_year$dt[1]
test
year(test)
spply?
)))
?sapply
# make proper index
df_year$year <- lapply(df_year$dt, year)
#### Ian's glmmTB method (beta regression model)
library(glmmTMB)
fit <- glmmTMB(ratioA ~ 1 + (year | site), data = df_year, family = 'beta_family')
summary(fit)
df_year
# make proper index
df_year$year <- sapply(df_year$dt, year)
#### Ian's glmmTB method (beta regression model)
library(glmmTMB)
fit <- glmmTMB(ratioA ~ 1 + (year | site), data = df_year, family = 'beta_family')
summary(fit)
df_year$year
df_year$site
